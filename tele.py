import requests
import datetime
import telebot
from config import tg_bot_token, open_weather_token
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
import keyboard as kb


bot = Bot(token=tg_bot_token)
dp = Dispatcher(bot)
group_id = -1001543854845


@dp.message_handler(commands=["start"])
async def start_command(message: types.Message):
    await bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç! –Ø —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω. ü§ö\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ–¥–∫—É –æ –ø–æ–≥–æ–¥–µ - –≤–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ —Ç–µ–±—è –≥–æ—Ä–æ–¥–∞.", reply_markup=kb.markup_requests)


@dp.message_handler(commands=["hi"])
async def start_command(message: types.Message):
    await bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç! ü§ö\n–Ø –∑–Ω–∞—é –≤—Å—ë –æ –ø–æ–≥–æ–¥–µ –≤ —Ç–≤–æ—ë–º –≥–æ—Ä–æ–¥–µ –∏ –Ω–µ —Ç–æ–ª—å–∫–æ! –ù–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ —è –æ—Ç–ø—Ä–∞–≤–ª—é —Ç–µ–±–µ —Å–≤–æ–¥–∫—É –ø–æ–≥–æ–¥—ã.", reply_markup=kb.markup_requests)



@dp.message_handler(commands=["help"])
async def start_command(message: types.Message):
    await bot.send_message(message.from_user.id, "–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n/start - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞.\n/hi - –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞.", reply_markup=kb.markup_requests)

@dp.message_handler()
async def get_weather(message: types.Message):
        code_to_smile = {
            "Clear": "–Ø—Å–Ω–æ \U00002600",
            "Clouds": "–û–±–ª–∞—á–Ω–æ \U0001F325",
            "Rain": "–î–æ–∂–¥—å \U00002614",
            "Drizzle": "–î–æ–∂–¥—å \U00002614",
            "Thunderstorm": "–ì—Ä–æ–∑–∞ \U000026A1",
            "Snow": "–°–Ω–µ–≥ \U0001F328",
            "Mist": "–¢—É–º–∞–Ω \U0001F32B",
        }


        try:
            r = requests.get(
                f"https://api.openweathermap.org/data/2.5/weather?q={message.text}&appid={open_weather_token}&units=metric"
            )
            data = r.json()

            city = data["name"]
            cur_weather = data["main"]["temp"]
            weather_description = data["weather"][0]["main"]
            if weather_description in code_to_smile:
                wd = code_to_smile[weather_description]
            else:
                wd = "–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ, –Ω–µ –ø–æ–π–º—É —á—Ç–æ —Ç–∞–º –∑–∞ –ø–æ–≥–æ–¥–∞..."
            humidity = data["main"]["humidity"]
            pressure = data["main"]["pressure"]
            wind = data["wind"]["speed"]
            sunrise_timestamp = datetime.datetime.fromtimestamp(data["sys"]["sunrise"])
            sunset_timestamp = datetime.datetime.fromtimestamp(data["sys"]["sunset"])
            length_of_the_day = datetime.datetime.fromtimestamp(data["sys"]["sunset"]) - datetime.datetime.fromtimestamp(data["sys"]["sunrise"])

            await message.reply(f"–°–≤–æ–¥–∫–∞ –ø–æ –ø–æ–≥–æ–¥–µ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –≤–∞–º–∏ –≥–æ—Ä–æ–¥–µ:\n\n\U0001F3D9 –ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city}\nüå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_weather}¬∞\n–ù–∞ —É–ª–∏—Ü–µ —Å–µ–π—á–∞—Å: {wd}\nüíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\nüåÄ –î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–º.—Ä—Ç.—Å—Ç\nüå¨ –í–µ—Ç–µ—Ä: {wind} –º/—Å\n\U0001F305–í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞: {sunrise_timestamp}\n\U0001F307–ó–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞: {sunset_timestamp}\nüïó –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è: {length_of_the_day} —á–∞—Å–∞(–æ–≤)\n\n –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! ‚ò∫ ")

        except:
            await message.reply("üö´ –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —É–∫–∞–∑–∞—Ç—å –¥—Ä—É–≥–æ–π! üö´")

if __name__ == '__main__':
    executor.start_polling(dp)
